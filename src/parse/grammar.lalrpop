use crate::{EGraph, Expr, Id, OpId};
use std::str::FromStr;

grammar(egraph: &mut EGraph);

Num: i32 = r"[0-9]+" => i32::from_str(<>).unwrap();
Var: String = r"[[:alpha:]][[:word:]]*" => <>.into();


pub Term: Id = {
    Num => egraph.add(Expr::Const(<>)).id,
    Var => egraph.add(Expr::Var(<>)).id,
    "(" "+" <l:Term> <r:Term>")" => egraph.add(Expr::Op2(OpId(0), l, r)).id,
    "(" "*" <l:Term> <r:Term>")" => egraph.add(Expr::Op2(OpId(1), l, r)).id,
};
